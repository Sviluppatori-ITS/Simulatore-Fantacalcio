# Generated by Django 5.2.3 on 2025-09-03 08:48

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0004_alter_tournament_options_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="tournamentstructure",
            name="home_and_away",
        ),
        migrations.RemoveField(
            model_name="tournamentstructure",
            name="use_groups",
        ),
        migrations.AddField(
            model_name="match",
            name="away_score_extra_time",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Gol squadra ospite nei tempi supplementari",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="away_score_penalties",
            field=models.PositiveIntegerField(
                blank=True, help_text="Gol squadra ospite ai rigori", null=True
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="extra_time_played",
            field=models.BooleanField(
                default=False,
                help_text="Indica se sono stati giocati i tempi supplementari",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="home_score_extra_time",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Gol squadra di casa nei tempi supplementari",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="home_score_penalties",
            field=models.PositiveIntegerField(
                blank=True, help_text="Gol squadra di casa ai rigori", null=True
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="penalties_played",
            field=models.BooleanField(
                default=False, help_text="Indica se sono stati battuti i rigori"
            ),
        ),
        migrations.AddField(
            model_name="tournamentranking",
            name="loss_extra_time",
            field=models.PositiveIntegerField(
                default=0, help_text="Numero di sconfitte ai tempi supplementari"
            ),
        ),
        migrations.AddField(
            model_name="tournamentranking",
            name="win_extra_time",
            field=models.PositiveIntegerField(
                default=0, help_text="Numero di vittorie ai tempi supplementari"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="POINTS_DRAW",
            field=models.PositiveSmallIntegerField(
                default=1, help_text="Punti per pareggio"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="POINTS_LOSS",
            field=models.PositiveSmallIntegerField(
                default=0, help_text="Punti per sconfitta"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="POINTS_LOSS_EXTRA_TIME",
            field=models.PositiveSmallIntegerField(
                default=0, help_text="Punti per sconfitta ai tempi supplementari"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="POINTS_LOSS_SHOOTOUT",
            field=models.PositiveSmallIntegerField(
                default=1, help_text="Punti per sconfitta ai rigori"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="POINTS_WIN",
            field=models.PositiveSmallIntegerField(
                default=3, help_text="Punti per vittoria"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="POINTS_WIN_EXTRA_TIME",
            field=models.PositiveSmallIntegerField(
                default=3, help_text="Punti per vittoria ai tempi supplementari"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="POINTS_WIN_SHOOTOUT",
            field=models.PositiveSmallIntegerField(
                default=2, help_text="Punti per vittoria ai rigori"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="allow_draws",
            field=models.BooleanField(
                default=True,
                help_text="Indica se sono consentiti pareggi nelle partite",
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="draw_resolution",
            field=models.CharField(
                choices=[
                    ("penalties", "Calci di rigore"),
                    ("extra_time", "Tempi supplementari"),
                    ("extra_time_penalties", "Tempi supplementari e rigori"),
                    ("replay", "Ripetizione della partita"),
                    ("golden_goal", "Golden goal"),
                ],
                default="penalties",
                help_text="Come risolvere i pareggi se non consentiti",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="tiebreaker_away_goals",
            field=models.BooleanField(
                default=False,
                help_text="Usa gol in trasferta come criterio di spareggio",
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="tiebreaker_goal_difference",
            field=models.BooleanField(
                default=True, help_text="Usa differenza reti come criterio di spareggio"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="tiebreaker_goals_scored",
            field=models.BooleanField(
                default=True, help_text="Usa gol segnati come criterio di spareggio"
            ),
        ),
        migrations.AddField(
            model_name="tournamentstructure",
            name="tiebreaker_head_to_head",
            field=models.CharField(
                choices=[
                    ("none", "Non utilizzato"),
                    ("all", "Scontri diretti (tutti)"),
                    ("goals", "Differenza reti scontri diretti"),
                    ("away_goals", "Gol in trasferta negli scontri diretti"),
                ],
                default="none",
                help_text="Criterio scontri diretti per spareggi",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="tournamentstructure",
            name="legs",
            field=models.PositiveSmallIntegerField(
                default=2,
                help_text="Numero di partite per accoppiamento (1=solo andata, 2=andata e ritorno, ecc.)",
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
    ]
